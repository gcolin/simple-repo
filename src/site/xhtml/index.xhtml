<div><h1>Simple repo</h1>
<p>A tiny Maven proxy and repository. This project has the same goal of famous repository managers such as Sonatype OSS Nexus, Apache Archiva and JFrog Artifactory. The major difference is that this repository manager can handle huge repositories without sacrifiying your RAM or your CPU. <em>Simple repo</em> uses some old and dirty technologies that makes it fast and Java container friendly.</p>
<h2>Why using this library?</h2>
<ul>
<li>Proxy for other Maven repositories</li>
<li>Hosts Maven artefacts</li>
<li>JRE 1.7+</li>
<li>Memory efficient and super fast</li>
<li>Need only servlet api 3.0 (works with Tomcat 7+ or Jetty 8+)</li>
<li>Can export a hosted repository to a static HTML web site</li>
<li>A minimal version sized less than 100 KB</li>
<li>A nice interface</li>
</ul>
<h2>How to build</h2>
<p>You need <strong>maven</strong> installed.</p>
<pre><code class="language-bash">    mvn clean package
</code></pre>
<p>For the minimal version</p>
<pre><code class="language-bash">    mvn clean package -P !full
</code></pre>
<p>the minimal version with Linux</p>
<pre><code class="language-bash">    mvn clean package -P \!full
</code></pre>
<p>A war archive is generated in the <em>simple-repo/target</em> folder. Rename it to <em>simple-repo.war</em>.</p>
<p>Deploy the generated <strong>war</strong> archive into a Java Container (Tested with Tomcat 6 and Tomcat 8).</p>
<p>For generating the maven site in <em>target/site</em> directory.</p>
<pre><code class="language-bash">    mvn site
</code></pre>
<h2>Where are stored the files</h2>
<p>The files are stored in <strong>~/.simplerepo</strong>. For storing files in another directory,
set the variable <em>simplerepo.root</em> (-Dsimplerepo.root=/path/to/repo).</p>
<h2>Configuration</h2>
<h3>Configure simple-repo</h3>
<p>The configuration is accessible through JMX. If you cannot access JMX via JConsole,
you can use <a href="https://github.com/gcolin/jmx-web-console">jmx-web-console</a> for configuring JMX via a web interface.</p>
<p>The configuration is accessible with the links <em>Repositories</em> and <em>Plugins</em> in the menu. In your container, add a user with the role <em>repo-admin</em>. For Tomcat,
update <em>TOMCAT_HOME/conf/tomcat-users.xml</em>. For Jetty, see <a href="https://wiki.eclipse.org/Jetty/Tutorial/Realms">the instructions</a>.</p>
<h3>Configure Maven</h3>
<p>Open <em>MAVEN_HOME/conf/settings.xml</em>, add a mirror</p>
<pre><code class="language-xml">    &lt;settings&gt;
      ...
      &lt;mirrors&gt;
        ...
         &lt;mirror&gt;
          &lt;id&gt;simplerepo&lt;/id&gt;
          &lt;mirrorOf&gt;*&lt;/mirrorOf&gt;
          &lt;url&gt;http://localhost:8080/simple-repo/repository/public&lt;/url&gt;
        &lt;/mirror&gt;
        ...
      &lt;/mirrors&gt;
      ...
    &lt;settings&gt;
</code></pre>
<h3>Uploading artifact</h3>
<p>You can upload manually with a command</p>
<pre><code class="language-bash">    mvn deploy:deploy-file -DgroupId=com.company -DartifactId=project -Dversion=1.0 -DgeneratePom=true -Dpackaging=jar -DrepositoryId=simple-repo-releases -Durl=http://localhost:8080/simple-repo/repository/thirdparty -Dfile=project-1.0.jar
</code></pre>
<h3>Deploy artifact</h3>
<p>In your container, add a user with the role <em>repo-upload</em>. For Tomcat,
update <em>TOMCAT_HOME/conf/tomcat-users.xml</em>. For Jetty, see <a href="https://wiki.eclipse.org/Jetty/Tutorial/Realms">the instructions</a>.</p>
<p>Open <em>MAVEN_HOME/conf/settings.xml</em>, add a server</p>
<pre><code class="language-xml">    &lt;settings&gt;
      ...
      &lt;servers&gt;
        ...
        &lt;server&gt;
          &lt;id&gt;simple-repo-snapshots&lt;/id&gt;
          &lt;username&gt;userName&lt;/username&gt;
          &lt;password&gt;userPassword&lt;/password&gt;
        &lt;/server&gt;
        &lt;server&gt;
          &lt;id&gt;simple-repo-releases&lt;/id&gt;
          &lt;username&gt;userName&lt;/username&gt;
          &lt;password&gt;userPassword&lt;/password&gt;
        &lt;/server&gt;
        ...
      &lt;/servers&gt;
      ...
    &lt;/settings&gt;
</code></pre>
<p>In your pom.xml, add</p>
<pre><code class="language-xml">    &lt;project&gt;
      ...
      &lt;distributionManagement&gt;
            &lt;snapshotRepository&gt;
               &lt;id&gt;simple-repo-snapshots&lt;/id&gt;
               &lt;url&gt;http://localhost:8080/simple-repo/repository/snapshots&lt;/url&gt;
            &lt;/snapshotRepository&gt;
            &lt;repository&gt;
                &lt;id&gt;simple-repo-releases&lt;/id&gt;
               &lt;url&gt;http://localhost:8080/simple-repo/repository/releases&lt;/url&gt;
            &lt;/repository&gt;
        &lt;/distributionManagement&gt;
      ...
    &lt;/project&gt;
</code></pre>
<p>And execute the maven deploy command</p>
<pre><code class="language-bash">    maven deploy
</code></pre>
<h2>Proxy another type of repository</h2>
<p>Simple-repo acts as a stupid proxy and stores as a stupid secured ftp like server. So, maybe other repository types can work too.</p>
<h2>Plugins</h2>
<p>Plugins</p>
<ul>
<li>can be disabled</li>
<li>are optional</li>
<li>are independant from each other</li>
</ul>
<p>You can build your own version or <em>Simple repo</em> by commenting some plugin dependencies in <em>simple-repo/pom.xml</em>.</p>
<h2>Package search</h2>
<p>The search functionnality is provided by a plugin installed by default with the standard version. It uses an embedded Apache Derby database and can handle a very important number of artifacts without impacting the RAM. The display of an artifact is close to mvnrepository.</p>
<p>A button <em>reindex</em> clear and rebuild the database.</p>
<h2>Theme</h2>
<p>The application uses the Bootstrap 3 standards and you can choose amoung various theme of Bootswatch.</p>
<h2>Extracting a repository</h2>
<p>The application can export a repository (for example the <em>release</em> repository) to a static HTML website with a search functionality coded in JavaScript. With this functionality, you can create your own online repository with a simple HTML file hosting.</p>
<p>For starting exporting, go to the <em>Plugins</em> page.</p>
</div>
