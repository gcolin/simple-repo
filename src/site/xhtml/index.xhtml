<div><h1>Simple repo</h1>
<p>A tiny Maven proxy and repository.</p>
<h2>Why using this library?</h2>
<ul>
<li>Proxy for Maven repositories</li>
<li>Host Maven artefacts</li>
<li>Very fast</li>
<li>JRE 1.6+</li>
<li>Very small (minimal war size about 32 KB)</li>
<li>Small footprint</li>
<li>No database</li>
<li>Configuration interface via JMX (easy to secure)</li>
<li>Need only servlet api 2.4 (can run on old and new containers)</li>
</ul>
<h2>How to build</h2>
<p>You need <strong>maven</strong> installed.</p>
<pre><code class="language-bash">    mvn clean package
</code></pre>
<p>A war archive is generated in the <em>target</em> folder. Rename it to <em>simple-repo.war</em>.</p>
<p>Deploy the generated <strong>war</strong> archive into a Java Container (Tested with Tomcat 6 and Tomcat 8).</p>
<p>For generating the maven site in <em>target/site</em> directory.</p>
<pre><code class="language-bash">    mvn site
</code></pre>
<h2>Where are stored the files</h2>
<p>The files are stored in <strong>~/.simplerepo</strong>. For storing files in another directory,
set the variable <em>simplerepo.root</em> (-Dsimplerepo.root=/path/to/repo).</p>
<h2>Configure Maven</h2>
<p>Open <em>MAVEN_HOME/conf/settings.xml</em>, add a mirror</p>
<pre><code class="language-xml">    &lt;settings&gt;
      ...
      &lt;mirrors&gt;
        ...
         &lt;mirror&gt;
          &lt;id&gt;simplerepo&lt;/id&gt;
          &lt;mirrorOf&gt;*&lt;/mirrorOf&gt;
          &lt;url&gt;http://localhost:8080/simple-repo/maven/public&lt;/url&gt;
        &lt;/mirror&gt;
        ...
      &lt;/mirrors&gt;
      ...
    &lt;settings&gt;
</code></pre>
<h2>Uploading artifact</h2>
<p>You can upload manually with a command</p>
<pre><code class="language-bash">    mvn deploy:deploy-file -DgroupId=com.company -DartifactId=project -Dversion=1.0 -DgeneratePom=true -Dpackaging=jar -DrepositoryId=simple-repo-releases -Durl=http://localhost:8080/simple-repo/maven/thirdparty -Dfile=project-1.0.jar
</code></pre>
<h2>Deploy artifact</h2>
<p>In your container, add a user with the role <em>manager-upload</em>. For Tomcat,
update <em>TOMCAT_HOME/conf/tomcat-users.xml</em>. For Jetty, see <a href="https://wiki.eclipse.org/Jetty/Tutorial/Realms">the instructions</a>.</p>
<p>Open <em>MAVEN_HOME/conf/settings.xml</em>, add a server</p>
<pre><code class="language-xml">    &lt;settings&gt;
      ...
      &lt;servers&gt;
        ...
        &lt;server&gt;
          &lt;id&gt;simple-repo-snapshots&lt;/id&gt;
          &lt;username&gt;userName&lt;/username&gt;
          &lt;password&gt;userPassword&lt;/password&gt;
        &lt;/server&gt;
        &lt;server&gt;
          &lt;id&gt;simple-repo-releases&lt;/id&gt;
          &lt;username&gt;userName&lt;/username&gt;
          &lt;password&gt;userPassword&lt;/password&gt;
        &lt;/server&gt;
        ...
      &lt;/servers&gt;
      ...
    &lt;/settings&gt;
</code></pre>
<p>In your pom.xml, add</p>
<pre><code class="language-xml">    &lt;project&gt;
      ...
      &lt;distributionManagement&gt;
            &lt;snapshotRepository&gt;
               &lt;id&gt;simple-repo-snapshots&lt;/id&gt;
               &lt;url&gt;http://localhost:8080/simple-repo/maven/snapshots&lt;/url&gt;
            &lt;/snapshotRepository&gt;
            &lt;repository&gt;
                &lt;id&gt;simple-repo-releases&lt;/id&gt;
               &lt;url&gt;http://localhost:8080/simple-repo/maven/releases&lt;/url&gt;
            &lt;/repository&gt;
        &lt;/distributionManagement&gt;
      ...
    &lt;/project&gt;
</code></pre>
<p>And execute the maven deploy command</p>
<pre><code class="language-bash">    maven deploy
</code></pre>
</div>